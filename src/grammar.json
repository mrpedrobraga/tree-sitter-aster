{
  "name": "sol",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression_list_semicolon"
        }
      ]
    },
    "_semicolon": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "STRING",
            "value": ";"
          }
        },
        {
          "type": "PATTERN",
          "value": "\\n\\s*"
        }
      ]
    },
    "_comma": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "STRING",
            "value": ","
          }
        },
        {
          "type": "PATTERN",
          "value": "\\n\\s*"
        }
      ]
    },
    "_expression_list_semicolon": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_semicolon"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_semicolon"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_expression_list_comma": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_semicolon"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_semicolon"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_literal"
        },
        {
          "type": "SYMBOL",
          "name": "dialog"
        }
      ]
    },
    "dialog": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_dialog_prefix"
        },
        {
          "type": "FIELD",
          "name": "content",
          "content": {
            "type": "SYMBOL",
            "name": "_dialog_content"
          }
        }
      ]
    },
    "_dialog_prefix": {
      "type": "FIELD",
      "name": "prefix",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "-"
          },
          {
            "type": "STRING",
            "value": "*"
          },
          {
            "type": "STRING",
            "value": ">"
          }
        ]
      }
    },
    "_dialog_content": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "text_raw_fragment"
          },
          {
            "type": "SYMBOL",
            "name": "text_escape_fragment"
          },
          {
            "type": "SYMBOL",
            "name": "text_expr_fragment"
          }
        ]
      }
    },
    "text_raw_fragment": {
      "type": "PATTERN",
      "value": "[^\\\\;\\r\\f\\n\\{\\}]+"
    },
    "text_escape_fragment": {
      "type": "SEQ",
      "members": [
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "\\"
          }
        },
        {
          "type": "PATTERN",
          "value": "."
        }
      ]
    },
    "text_expr_fragment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "_expression_list_semicolon"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "_string_literal"
        }
      ]
    },
    "_string_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string_single"
        },
        {
          "type": "SYMBOL",
          "name": "string_double"
        }
      ]
    },
    "string_single": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "'"
          },
          {
            "type": "FIELD",
            "name": "content",
            "content": {
              "type": "PATTERN",
              "value": "[^\\']*"
            }
          },
          {
            "type": "STRING",
            "value": "'"
          }
        ]
      }
    },
    "string_double": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\""
          },
          {
            "type": "FIELD",
            "name": "content",
            "content": {
              "type": "PATTERN",
              "value": "[^\\\"]*"
            }
          },
          {
            "type": "STRING",
            "value": "\""
          }
        ]
      }
    },
    "_number_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "int_literal"
        },
        {
          "type": "SYMBOL",
          "name": "float_literal"
        }
      ]
    },
    "int_literal": {
      "type": "PATTERN",
      "value": "[0-9_]+"
    },
    "float_literal": {
      "type": "PATTERN",
      "value": "[0-9_]+(\\.[0-9_]+)?"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
